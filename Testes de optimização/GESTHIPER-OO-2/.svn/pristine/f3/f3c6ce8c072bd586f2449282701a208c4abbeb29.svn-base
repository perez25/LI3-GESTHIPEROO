/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gesthiper.oo;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;

/**
 *
 * @author Perez_25
 */
public class Compras {

    private ArrayList<HashSet<String>> clientes_que_compraram_by_mes;
    private HashMap<String, HashMap<String, Cliente_Compras_a_Produto>> produto_compras;
    private int total_de_compras_com_valor_zero;

    public Compras() {
        this.clientes_que_compraram_by_mes = new ArrayList<>(12);
        for (int i = 0; i < 12; i++) {
            HashSet<String> novo = new HashSet<>();
            this.clientes_que_compraram_by_mes.add(novo);
        }
        this.produto_compras = new HashMap<>();
    }

    public Compras(HashMap<String, HashMap<String, Cliente_Compras_a_Produto>> t) {
        this.produto_compras = new HashMap<>();
        for (Map.Entry<String, HashMap<String, Cliente_Compras_a_Produto>> entrySet : t.entrySet()) {
            String key = entrySet.getKey();
            HashMap<String, Cliente_Compras_a_Produto> value = entrySet.getValue();
            this.produto_compras.put(key, value);
        }
    }

    public void insert_compra(Compra t) {
        if (t.getPreco() == 0.0) {
            this.total_de_compras_com_valor_zero++;
        }

        this.clientes_que_compraram_by_mes.get(t.getMes() - 1).add(t.getCl().getCodigo_cliente());

        if (this.getProduto_compras().containsKey(t.getProd().getCodigo_produto())) {
            if (this.getProduto_compras().get(t.getProd().getCodigo_produto()).containsKey((t.getCl().getCodigo_cliente()))) {
                if (t.getModo() == 'P') {
                    this.produto_compras.get(t.getProd().getCodigo_produto()).get(t.getCl().getCodigo_cliente()).getMesesP()[t.getMes() - 1] += t.getQuantidade();
                    this.produto_compras.get(t.getProd().getCodigo_produto()).get(t.getCl().getCodigo_cliente()).setNumeroComprasP(t.getQuantidade() + this.produto_compras.get(t.getProd().getCodigo_produto()).get(t.getCl().getCodigo_cliente()).getNumeroComprasP());
                    this.produto_compras.get(t.getProd().getCodigo_produto()).get(t.getCl().getCodigo_cliente()).add_compra_by_mes_modo_P(t.getMes() - 1);

                } else {
                    this.produto_compras.get(t.getProd().getCodigo_produto()).get(t.getCl().getCodigo_cliente()).getMesesN()[t.getMes() - 1] += t.getQuantidade();
                    this.produto_compras.get(t.getProd().getCodigo_produto()).get(t.getCl().getCodigo_cliente()).setNumeroComprasN(t.getQuantidade() + this.produto_compras.get(t.getProd().getCodigo_produto()).get(t.getCl().getCodigo_cliente()).getNumeroComprasN());
                    this.produto_compras.get(t.getProd().getCodigo_produto()).get(t.getCl().getCodigo_cliente()).add_compra_by_mes_modo_N(t.getMes() - 1);
                }
            } else {
                Cliente_Compras_a_Produto cc = new Cliente_Compras_a_Produto();
                if (t.getModo() == 'P') {
                    cc.getMesesP()[t.getMes() - 1] = t.getQuantidade();
                    cc.setNumeroComprasP(t.getQuantidade());
                    cc.setCl(t.getCl());
                    cc.getCompras_mes_P()[t.getMes() - 1] = 1;
                } else {
                    cc.getMesesN()[t.getMes() - 1] = t.getQuantidade();
                    cc.setNumeroComprasN(t.getQuantidade());
                    cc.setCl(t.getCl());
                    cc.getCompras_mes_N()[t.getMes() - 1] = 1;
                }
                this.produto_compras.get(t.getProd().getCodigo_produto()).put(t.getCl().codigo_cliente, cc);
            }
        } else {
            HashMap<String, Cliente_Compras_a_Produto> novo = new HashMap<>();
            Cliente_Compras_a_Produto cc = new Cliente_Compras_a_Produto();
            if (t.getModo() == 'P') {
                cc.getMesesP()[t.getMes() - 1] = t.getQuantidade();
                cc.setNumeroComprasP(t.getQuantidade());
                cc.setCl(t.getCl());
                cc.getCompras_mes_P()[t.getMes() - 1] = 1;
            } else {
                cc.getMesesN()[t.getMes() - 1] = t.getQuantidade();
                cc.setNumeroComprasN(t.getQuantidade());
                cc.setCl(t.getCl());
                cc.getCompras_mes_N()[t.getMes() - 1] = 1;
            }
            novo.put(t.getCl().getCodigo_cliente(), cc);
            this.getProduto_compras().put(t.getProd().getCodigo_produto(), novo);

        }

    }

    public Compras clone(Compras t) {
        return null;
    }

    public boolean equals(Compras t) {
        return false;
    }

    @Override
    public String toString() {
        StringBuilder s = new StringBuilder();
        s.append("MÃ³dulo de Compras\n");
        s.append("Numero de Produtos existentes : ").append(this.getProduto_compras().size()).append("\n");

        return s.toString();
    }

    /**
     * @return the produto_compras
     */
    public HashMap<String, HashMap<String, Cliente_Compras_a_Produto>> getProduto_compras() {
        return produto_compras;
    }

    /**
     * @return the total_de_compras_com_valor_zero
     */
    public int getTotal_de_compras_com_valor_zero() {
        return total_de_compras_com_valor_zero;
    }

    public int getTotal_de_produtos_comprados() {
        return this.produto_compras.size();
    }

    public ArrayList<String> devolve_numero_compras_mes_a_mes() {
        ArrayList<String> res = new ArrayList<>();

        int aux = 0;
        int i = 0;
        while (i < 12) {
            for (HashMap<String, Cliente_Compras_a_Produto> cp : this.produto_compras.values()) {
                for (Cliente_Compras_a_Produto cl : cp.values()) {
                    aux += cl.getCompras_mes_P()[i] + cl.getCompras_mes_N()[i];
                }
            }
            res.add(i, i + 1 + " - " + String.valueOf(aux));
            aux = 0;
            i++;
        }
        return res;
    }

    public ArrayList<String> devolve_numero_clientes_mes_a_mes_que_compraram() {
        ArrayList<String> res = new ArrayList<>();
        int aux = 1;
        for (HashSet<String> h : this.clientes_que_compraram_by_mes) {
            res.add(aux + " - " + h.size());
            aux++;
        }
        return res;
    }

    /**
     * @return the clientes_que_compraram
     */
    public ArrayList<HashSet<String>> getClientes_que_compraram() {
        return clientes_que_compraram_by_mes;
    }

    public int getNumeroDeClientesQueCompraram() {
        int res = 0;
        for (HashSet<String> h : this.clientes_que_compraram_by_mes) {
                res += h.size();
        }
        return res;
    }

    /**
     * @param clientes_que_compraram the clientes_que_compraram to set
     */
    public void setClientes_que_compraram(ArrayList<HashSet<String>> clientes_que_compraram) {
        this.clientes_que_compraram_by_mes = clientes_que_compraram;
    }

}
